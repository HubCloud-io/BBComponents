@page "/counter"

@using BlazorServerSideForDebug.Data
@inject BBComponents.Services.IAlertService AlertService

<h1>Number input</h1>

<BbNumberInput TValue="decimal" @bind-Value="_number" Digits="3"></BbNumberInput>

<h3>Input result: @_number</h3>

<hr />

<BbNumberInput TValue="int" @bind-Value="_numberInt"></BbNumberInput>

<h3>Int: @_numberInt</h3>

<hr />


<div class="col-sm-6">

    @*<BbSelect TValue="int"
        ItemsSource="_currencies"
        TextName="Code"
        ValueName="Id"
        @bind-Value="_selectedCurrencyId"
        Changed="OnSelectChange"
        HtmlClass="form-control"></BbSelect>*@

    <BbSelect TValue="string"
              ItemsSource="_currencies"
              TextName="Title"
              ValueName="Code"
              @bind-Value="_selectedCurrencyCode"
              Changed="OnSelectChange"
              HtmlClass="form-control"></BbSelect>


    <div class="form-group form-group-sm row">
        <label class="col-sm-4">Currency Id</label>
        <div class="col-sm-8">
            @_selectedCurrencyId
        </div>
    </div>

    <div class="form-group form-group-sm row">
        <label class="col-sm-4">Currency code</label>
        <div class="col-sm-8">
            @_selectedCurrencyCode
        </div>
    </div>

</div>


<hr />

<div class="row">

    <div class="col-sm-6">

        <div class="card">

            <div class="card-body">

                <BbNavs TValue="int"
                        ItemsSource="_tabsSource"
                        ValueName="Item1"
                        TextName="Item2"
                        NavStyle="BBComponents.Enums.NavStyles.Tabs"
                        @bind-Value="_activeTab"></BbNavs>

                @if (_activeTab == 0)
                {
                    <div>
                        <h1>Main content</h1>
                    </div>
                }
                else if (_activeTab == 1)
                {
                    <div>
                        <h1>Other content</h1>
                    </div>
                }

            </div>

        </div>

    </div>

</div>

<hr />

<div class="row">

    <div class="col-sm-6">

        <div class="card">

            <BbListGroup TValue="Currency" 
                         ItemsSource="_currencies" 
                         HtmlClass="list-group-flush" 
                         ItemClick="OnItemClick">

                <ItemTemplate Context="item">
                    <span>@item.Code</span><span class="float-right">@item.CodeNumeric</span>
                </ItemTemplate>

            </BbListGroup>

        </div>

    </div>

    <div class="col-sm-6">

        <div class="card">

            <span>@_selectedItem</span>

        </div>

    </div>

</div>

<BbAlertHub></BbAlertHub>


@code {

    private decimal _number;
    private int _numberInt;
    private int _selectedCurrencyId;
    private string _selectedCurrencyCode;

    private List<Tuple<int, string>> _tabsSource;
    private int _activeTab = 0;

    private List<Currency> _currencies;
    private Currency _selectedItem;



    protected override void OnInitialized()
    {
        _tabsSource = new List<Tuple<int, string>>();
        _tabsSource.Add(new Tuple<int, string>(0, "Main"));
        _tabsSource.Add(new Tuple<int, string>(1, "Other"));

        _currencies = Currency.SampleData().ToList();
    }

    private void OnItemClick(Currency item)
    {
        _selectedItem = item;
    }

    private void OnSelectChange()
    {
        AlertService.Add($"Currency changed {_selectedCurrencyId}", BBComponents.Enums.BootstrapColors.Info);
    }

}
